name: "Test PR"

on:
  - pull_request

jobs:
  build:
    strategy:
      matrix:
        profiles:
          - verity-full,docker-ext
          - verity-full,docker
    runs-on: ubuntu-latest
    steps:
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.9.1
      - name: setup-mkosi
        uses: sorenisanerd/mkosi@main
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dsaltares/fetch-gh-release-asset@master
        id: tools-fetch
        with:
          repo: ${{ github.repository_owner }}/mangos-tools
          version: latest
          file: 'mangos\.tools_.*\.tar\.zst.*'
          regex: true
          target: 'dl/'
      - name: Verify tools signature
        env:
          tag: ${{ steps.tools-fetch.outputs.version }}
        run: |
          cosign verify-blob  --bundle dl/mangos.tools_*.tar.zst.sigbundle \
                              --certificate-identity "${{ github.server_url }}/${{ github.repository_owner }}/mangos-tools/.github/workflows/build.yml@refs/tags/${tag}" \
                              --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
                              dl/mangos.tools_*.tar.zst
      - name: Decompress and stage tools
        run: mkdir mkosi.tools ; tar -x --zstd -f dl/mangos.tools_*.tar.zst -C mkosi.tools
      - name: Generate key
        run: |
          #!/bin/sh
          mkosi genkey
      - name: Run mkosi
        env:
          profiles: ${{ matrix.profiles }}
        run: mkosi --debug --profile="${profiles}"
      - name: List built artifacts
        run: find out/
      - name: Export image version for later steps
        run: echo IMAGE_VERSION="$(./mkosi.version)" >> $GITHUB_ENV
      - name: Test it
        run: |
          #!/bin/bash
          set -x
          set -e

          # mkosi doesn't pick this up from the tools dir for some reason
          sudo apt-get install -y ovmf

          mkosi --debug vm -- -uuid $(uuidgen) > vm.log 2>&1 &
          pid=$!

          success=0
          for try in {1..10}
          do
                  if mkosi ssh -- cat /etc/os-release
                  then
                          success=1
                          break
                  fi
                  sleep 5
          done

          if [ $success -eq 1 ]
          then
                  echo "mkosi ssh succeeded"
          else
                  echo "mkosi ssh failed"
                  cat vm.log
                  exit 1
          fi
          mkosi ssh -- shutdown -h now || true
          sleep 5

      - name: Remove symlinks
        run: find out/ -type l -delete
      - name: Compress artifacts
        run: |
          for file in out/mangos{,-installer}_*.raw out/mangos_*.efi ; do zstd --rm "$file" ; done
          if ls out/docker_*.raw > /dev/null 2>&1
          then
              for file in out/docker_*.raw
              do
                  zstd --rm "$file"
              done
          fi
      - name: Upload build artifact (disk)
        id: upload-disk
        uses: actions/upload-artifact@v4
        with:
          path: |
            out/mangos_${{ env.IMAGE_VERSION }}.efi.zst
            out/mangos_${{ env.IMAGE_VERSION }}.root-x86-64.*.zst
            out/mangos_${{ env.IMAGE_VERSION }}.root-x86-64-verity.*.zst
            out/mangos_${{ env.IMAGE_VERSION }}.root-x86-64-verity-sig.*.zst
            out/mangos_${{ env.IMAGE_VERSION }}.raw.zst
            out/mangos_${{ env.IMAGE_VERSION }}.cyclonedx.json
            out/mangos_${{ env.IMAGE_VERSION }}.github.json
            out/mangos_${{ env.IMAGE_VERSION }}.spdx.json
            out/mangos_${{ env.IMAGE_VERSION }}.syft.json
            out/docker_${{ env.IMAGE_VERSION }}.raw.zst
          name: mangos.${{ matrix.profiles }}.disk
      - name: Upload build artifact (installer)
        uses: actions/upload-artifact@v4
        with:
          path: |
            out/mangos-installer_${{ env.IMAGE_VERSION }}.raw.zst
            out/mangos-installer_${{ env.IMAGE_VERSION }}.cyclonedx.json
            out/mangos-installer_${{ env.IMAGE_VERSION }}.github.json
            out/mangos-installer_${{ env.IMAGE_VERSION }}.spdx.json
            out/mangos-installer_${{ env.IMAGE_VERSION }}.syft.json
          name: mangos.${{ matrix.profiles }}.installer
